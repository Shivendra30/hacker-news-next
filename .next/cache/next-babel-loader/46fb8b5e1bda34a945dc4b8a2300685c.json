{"ast":null,"code":"export default (function (timestamp) {\n  var date = new Date(timestamp * 1000);\n  var currDate = new Date();\n  var res = Math.abs(date - currDate) / 1000;\n  var days = Math.floor(res / 86400);\n  var hours = parseInt(Math.floor(res / 3600) % 24);\n  var minutes = parseInt(Math.floor(res / 60) % 60);\n  var seconds = parseInt(res % 60);\n  if (days > 0) return \"\".concat(days, \" days ago\");else if (days === 0 && hours > 0) return \"\".concat(hours, \" hours ago\");else if (hours === 0 && minutes > 0) return \"\".concat(minutes, \" minutes ago\");else if (hours === 0 && minutes === 0 && seconds > 0) return \"\".concat(seconds, \" seconds ago\");\n});","map":{"version":3,"sources":["/Users/shivendra/Documents/Shivendra/NextJs/hacker-news-next/helpers/getTimePassed.js"],"names":["timestamp","date","Date","currDate","res","Math","abs","days","floor","hours","parseInt","minutes","seconds"],"mappings":"AAAA,gBAAe,UAAAA,SAAS,EAAI;AAC1B,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,SAAS,GAAG,IAArB,CAAb;AACA,MAAMG,QAAQ,GAAG,IAAID,IAAJ,EAAjB;AACA,MAAME,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASL,IAAI,GAAGE,QAAhB,IAA4B,IAAxC;AAEA,MAAMI,IAAI,GAAGF,IAAI,CAACG,KAAL,CAAWJ,GAAG,GAAG,KAAjB,CAAb;AAEA,MAAMK,KAAK,GAAGC,QAAQ,CAACL,IAAI,CAACG,KAAL,CAAWJ,GAAG,GAAG,IAAjB,IAAyB,EAA1B,CAAtB;AAEA,MAAMO,OAAO,GAAGD,QAAQ,CAACL,IAAI,CAACG,KAAL,CAAWJ,GAAG,GAAG,EAAjB,IAAuB,EAAxB,CAAxB;AAEA,MAAMQ,OAAO,GAAGF,QAAQ,CAACN,GAAG,GAAG,EAAP,CAAxB;AAEA,MAAIG,IAAI,GAAG,CAAX,EAAc,iBAAUA,IAAV,eAAd,KACK,IAAIA,IAAI,KAAK,CAAT,IAAcE,KAAK,GAAG,CAA1B,EAA6B,iBAAUA,KAAV,gBAA7B,KACA,IAAIA,KAAK,KAAK,CAAV,IAAeE,OAAO,GAAG,CAA7B,EAAgC,iBAAUA,OAAV,kBAAhC,KACA,IAAIF,KAAK,KAAK,CAAV,IAAeE,OAAO,KAAK,CAA3B,IAAgCC,OAAO,GAAG,CAA9C,EACH,iBAAUA,OAAV;AACH,CAlBD","sourcesContent":["export default timestamp => {\n  const date = new Date(timestamp * 1000);\n  const currDate = new Date();\n  const res = Math.abs(date - currDate) / 1000;\n\n  const days = Math.floor(res / 86400);\n\n  const hours = parseInt(Math.floor(res / 3600) % 24);\n\n  const minutes = parseInt(Math.floor(res / 60) % 60);\n\n  const seconds = parseInt(res % 60);\n\n  if (days > 0) return `${days} days ago`;\n  else if (days === 0 && hours > 0) return `${hours} hours ago`;\n  else if (hours === 0 && minutes > 0) return `${minutes} minutes ago`;\n  else if (hours === 0 && minutes === 0 && seconds > 0)\n    return `${seconds} seconds ago`;\n};\n"]},"metadata":{},"sourceType":"module"}